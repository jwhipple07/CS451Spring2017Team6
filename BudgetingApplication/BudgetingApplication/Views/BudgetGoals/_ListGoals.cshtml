@model BudgetingApplication.Models.BudgetGoals_VW

@{
    
    double incomeGoal, incomeAmount;
    if (Model.GoalCategory == 1)
    { //skip displaying the deposit goal
        incomeAmount = Convert.ToDouble(Model.TransactionAmount);
        incomeGoal = Convert.ToDouble(Model.BudgetGoalAmount);
        ViewData.Add("Parent", this);
        return;
    }

    double TransactionAmount = (double)Model.TransactionAmount;
    TransactionAmount = (TransactionAmount * -1);
    double BudgetGoalAmount = (double)Model.BudgetGoalAmount;
    int percentage = (int)((TransactionAmount / BudgetGoalAmount) * 100);

    double remaining = BudgetGoalAmount - TransactionAmount;
    string parentLabel = Model.ParentCategory == null ? "" : Model.ParentCategory + ":";

    string progressType = "progress-bar-success";
    if (percentage > 70 && percentage < 90)
    {
        progressType = "progress-bar-warning";
    }
    else if (percentage >= 90)
    {
        progressType = "progress-bar-danger";
    }

<div id="budgetGoal_@Model.BudgetGoalID" class="bGoalContainer">
    <div class="bGoalUpper">
        <div class="bGoalLabel">
            <span class="bGoal-parent-label">@parentLabel</span>
            <span class="bGoal-child-label">@Html.DisplayFor(modelItem => Model.CategoryType)</span>
            <div class="bGoal-edit" style="float:right;display:none;">
                @Html.ActionLink("Edit", "InsertBudgetGoal", new { id = Model.BudgetGoalID }) | 
                @Html.ActionLink("Delete", "inactivateBudget",  new { id = Model.BudgetGoalID }, new { @class = "delete" })
            </div>
        </div>
        <span style="font-style:italic; font-size:x-small">@Html.DisplayFor(modelItem => Model.Description)</span>
    </div>
    <div class="bGoalProgress">
        <div class="progress">
            <div class="progress-bar @progressType" role="progressbar" aria-valuenow="40" aria-valuemin="0" aria-valuemax="100" style="width: @percentage%">

            </div>
        </div>
        <div class="bGoalLower clearfix">
            <div class="col-md-4 col-xs-6">
                <div class="col-xs-12">Total Spent: </div>
                <div class="col-xs-12"><span class="bGoal-amount">$@TransactionAmount</span> </div>
            </div>
            <div class="col-md-4 col-xs-6">
                <div class="col-xs-12">Total Budgeted: </div>
                <div class="col-xs-12"><span class="bGoal-amount"> $@BudgetGoalAmount</span></div>
            </div>
            <div class="col-md-4 visible-md-block visible-lg-block " style="float:right;">
               
                    @if (remaining > 0)
                    {
                        <div class="col-xs-12">
                            <span>Remaining:</span>
                            <div class="col-xs-12">
                                <span class="bGoal-amount">$@remaining</span>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="col-xs-12">
                            <div class="col-xs-12">
                                <span class="bGoal-amount" style="color:red;">Over:</span>
                            </div>
                            <div class="col-xs-12">
                                <span class="bGoal-amount"  style="color:red;">$@Math.Abs(remaining)</span>
                            </div>
                        </div>
                    }
            </div>
            
        </div>
    </div>
</div>
    }