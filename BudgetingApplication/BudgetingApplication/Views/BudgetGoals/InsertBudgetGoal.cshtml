@model BudgetingApplication.Models.BudgetGoalModelView
    @{ 
        Layout = "~/Views/_Layout.cshtml";
     }
<script>
    $(document).on("input", ".numeric-input", function () {
        this.value = this.value.replace(/[^\d+(\.\d{1,2})?]/g, '');
    });
    $(document).ready(function () {
        $("form").submit(function (event) {
            $('#budgetGoal_GoalCategory').removeAttr('disabled');
        });
    });
</script>
@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.budgetGoal.BudgetGoalID)
    @Html.HiddenFor(model => model.budgetGoal.Status)
    @Html.HiddenFor(model => model.budgetGoal.Month)


    <div class="form-horizontal" style="width:450px;">
        <h2>Create a New Goal for Next Month</h2>
        <p>This will overwrite any previously created goals for next month of the same category.</p>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
      

       <div class="form-group">
            @Html.LabelFor(model => model.budgetGoal.GoalCategory, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                @if (Model.budgetGoal != null && Model.budgetGoal.BudgetGoalID > 0)
                {
                    @Html.HiddenFor(model =>model.budgetGoal.GoalCategory)
                    @Html.DisplayFor(model => model.budgetView.First().CategoryType);
                }
                else
                {
                     @Html.DropDownListFor(model => model.budgetGoal.GoalCategory, Model.category, Model.budgetGoal == null || Model.budgetGoal.BudgetGoalID == 0 ? new { @class = "form-control" } as object : new { @class = "form-control", @disabled = "disabled" } as object)
                }
               
                @Html.ValidationMessageFor(model => model.budgetGoal.GoalCategory, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.budgetGoal.BudgetGoalAmount, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.budgetGoal.BudgetGoalAmount, new { htmlAttributes = new { @class = "form-control numeric-input" } })
                @Html.ValidationMessageFor(model => model.budgetGoal.BudgetGoalAmount, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.budgetGoal.Description, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.budgetGoal.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.budgetGoal.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-10 col-md-2">
                <input id="submitBtn" type="submit" value="Save" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
