@model BudgetingApplication.ViewModels.SavingsGoalsViewModel
@{
    ViewBag.Title = "Index";
    ViewBag.PageName = "Savings";
    Layout = "~/Views/_Layout.cshtml";
}

@*Adds edit button when hovering over a goal*@
<script>
    $(document).ready(function () {
        @{ var msgTitle = "";
            var msgBody = "";}
        $(".sGoalContainer").hover(
            function () {
                $(this).find('.sGoal-edit').show();
            }, function() {
                $(this).find('.sGoal-edit').hide();
            }
        );
        @if (ViewBag.SuccessTitle != null) {
            msgTitle = ViewBag.SuccessTitle;
            msgBody = ViewBag.SuccessBody;

        }
        var messageTitle = '@msgTitle';
        var messageBody = '@msgBody';
        if(messageTitle != ""){
            $.notify({
                title: messageTitle,
                message: messageBody
            }, {
                type: 'minimalist',
                delay: 20000,
                placement: {
                    from: 'bottom',
                    align: 'right'
                },
                animate: {
                    enter: 'animated bounceIn',
                    exit: 'animated fadeOutDown'
                },
                icon_type: 'image',
                template: '<div data-notify="container" class=" alert-success col-xs-11 col-sm-3 alert alert-{0}" role="alert">' +
                        '<button type="button" aria-hidden="true" class="close" data-notify="dismiss">×</button>' +
                        '<span data-notify="title">{1}</span>' +
                        '<span data-notify="message">{2}</span>' +
                        '</div>'

            });

        }
    });
</script>


<div class="col-sm-12"><h2>Savings Goals</h2></div>
<div id="savingsGoalContainer" class="col-sm-12">
    @*Separates Goals into Active, Successful, and Unsuccessful pages*@
    <ul class="nav nav-tabs">
        <li class="active"><a data-toggle="tab" href="#activeGoals">Active Goals</a></li>
        <li><a data-toggle="tab" href="#successes">Successful Goals</a></li>
        <li><a data-toggle="tab" href="#Unsuccessful">Unsuccessful Goals</a></li>
    </ul>
    <div class="tab-content">
        <div id="activeGoals" class="tab-pane fade in active">
            <div class="col-sm-12">
                <h3>Currently Active Goals</h3>
                <em>Goals that are currently active.</em>
            </div>

            @*Generates a list of Active Savings Goals*@
            @foreach (var item in ViewData.Model.savingsView)
            {
                @Html.Partial("~/Views/SavingsGoal/_ListGoals.cshtml", item)
            }

            @*Allows users to insert new savings goals*@
            <div class="col-sm-12">
                <a type="button" class="btn btn-success"
                   href="~/SavingsGoal/InsertSavingsGoal">+ Add New Goal</a>
            </div>
        </div>
        <div id="successes" class="tab-pane fade">
            <div class="col-sm-12">
                <h3>Successful Goals</h3>
                <em>Goals that were successful!</em>
            </div>
            @*Generates lst of savings goals that were met in the past*@
                @foreach (var item in ViewData.Model.savingsViewSuccesses)
            {
                    @Html.Partial("~/Views/SavingsGoal/_ListGoals.cshtml", item)
                }
            </div>
        <div id="Unsuccessful" class="tab-pane fade">
            <div class="col-sm-12">
                <h3>Unsuccessful Goals</h3>
                <em>Goals that did not reach their goal by the finish date.</em>
            </div>
            @*Generates list of goals that were not met*@
                @foreach (var item in ViewData.Model.savingsViewFails)
            {
                    @Html.Partial("~/Views/SavingsGoal/_ListGoals.cshtml", item)
                }
            </div>
    </div>
</div>
   
 @*Displays goal statistics in sidebar*@
        @section sidebar{

            @{double total = 0;
                double complete = 0;


                total = Model.savingsView.Count() + Model.savingsViewFails.Count() + Model.savingsViewSuccesses.Count();
                complete = Model.savingsViewSuccesses.Count();

                <div class="col-sm-12 sGoal-sidebar">
                    <h3>Goals Met:  </h3>
                    <div class="sGoal-sidebar-amount">
                        <span>@complete of @total</span>
                    </div>
                </div>
               
                <div class="col-sm-12 sGoal-sidebar">
                    <h4>Active Goals:</h4>
                    @Model.savingsView.Count()
                </div>
                <div class="col-sm-12 sGoal-sidebar-successful">
                    <h4>Successful Goals:</h4>
                    @Model.savingsViewSuccesses.Count()
                </div>
                <div class="col-sm-12 sGoal-sidebar-unsuccessful">
                    <h4>Unsuccessful Goals:</h4>
                    @Model.savingsViewFails.Count()
                </div>
                
            }
        }


