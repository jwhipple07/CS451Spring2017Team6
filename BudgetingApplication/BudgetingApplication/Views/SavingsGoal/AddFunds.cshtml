@model BudgetingApplication.ViewModels.SavingsGoalsViewModel

@{
    ViewBag.Title = "AddFunds";
    Layout = "~/Views/_Layout.cshtml";
}

<!--script for Confirm and Cancel button actions-->
<script type="text/javascript">
    
    $(document).ready(function(){
    $("#dialog").dialog({
        autoOpen: false,
        modal: true
    });
    $(document).on('click', 'form input[type=submit]', function (e) {
        e.preventDefault();
        var targetUrl = $(this).attr("href");

        $("#dialog").dialog({
            buttons: {
                "Confirm": function () {
                    $('form').submit();
                },
                "Cancel": function () {
                    $(this).dialog("close");
                }
            }
        });

        $("#dialog").dialog("open");
    });
    })
    </script>
<div id="dialog" title="Confirmation Required">
    Are you sure you want to transfer this amount?
</div>

<h2>Add Funds to 
    <em>@Model.savingsGoal.GoalDescription</em></h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>Transfer Funds to Meet Your Goals.</h4><br />
        <div class="col-md-12">
            <h4>
                Total Remaining Left to Save: $@string.Format("{0:n2}", Model.savingsGoal.SavingsGoalAmount - Model.savingsGoal.CurrentGoalAmount)
            </h4>
        </div>
        <hr />
        <!--Hides attributes that the user should not be able to edit in this form-->
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.savingsGoal.SavingGoalID)
        @Html.HiddenFor(model => model.savingsGoal.CurrentGoalAmount)
        @Html.HiddenFor(model => model.savingsGoal.SavingsGoalAmount)
        @Html.HiddenFor(model => model.savingsGoal.GoalDescription)

        <!--Creates a dropdown list that lets users select which account to transfer funds from, as well as available balances-->
        <div class="form-group">
            <p>Account to Transfer from: </p>
            <div class="col-md-4">
                @Html.DropDownListFor(model => model.transaction.TransactionAccountNo, Model.clientTransaction.Where(x => x.TransactionAmount > 0)
                                .Select(x =>
                                 new SelectListItem() { Text = x.Description + " ($" + string.Format("{0:n2}", x.TransactionAmount) + ")", Value = x.TransactionAccountNo.ToString() })
                             , new { @class = "form-control" })
            </div>
        </div>

        <!--adds amount to be transferred to CurrentGoalAmount in the database-->
        <div class="form-group">
            <p>Amount to Save: </p>
            <div class="col-md-4">
                @Html.EditorFor(model => model.addToGoal, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.addToGoal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Transfer" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
